// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Text;
using Serializer.Contracts;
using FourServerProxy.HighPerformance.Extensions;

namespace Serializer.Consumer.UseCases;

public partial struct LoginReqPacket : ISerializable<LoginReqPacket>
{
    public static int GetPacketSize(LoginReqPacket obj)
    {
        var size = 0;
        size += sizeof(ushort); // Size for unmanaged type wVersion
        size += sizeof(int); // Size for string length
        size += System.Text.Encoding.UTF8.GetByteCount(obj.strUserID);
        size += sizeof(int); // Size for string length
        size += System.Text.Encoding.UTF8.GetByteCount(obj.strPasswd);
        size += sizeof(long); // Size for unmanaged type dlCheck
        return size;
    }

    public static LoginReqPacket Deserialize(ReadOnlySpan<byte> data, out int bytesRead)
    {
        bytesRead = 0;
        var originalData = data;
        var obj = new LoginReqPacket();
        obj.wVersion = data.ReadUInt16();
        obj.strUserID = data.ReadString();
        obj.strPasswd = data.ReadString();
        obj.dlCheck = data.ReadInt64();
        bytesRead = originalData.Length - data.Length;
        return obj;
    }

    public static int Serialize(LoginReqPacket obj, Span<byte> data)
    {
        var originalData = data;
        data.WriteUInt16(obj.wVersion);
        data.WriteString(obj.strUserID);
        data.WriteString(obj.strPasswd);
        data.WriteInt64(obj.dlCheck);
        return originalData.Length - data.Length;
    }
}

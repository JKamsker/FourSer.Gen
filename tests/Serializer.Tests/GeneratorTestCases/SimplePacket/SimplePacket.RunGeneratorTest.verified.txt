// <auto-generated/>
using System;
using System.Buffers.Binary;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using Serializer.Contracts;
using System.IO;
using Serializer.Generator.Helpers;

namespace TestNamespace;

public partial class LoginPacket : ISerializable<LoginPacket>
{
    public static int GetPacketSize(LoginPacket obj)
    {
        var size = 0;
        size += sizeof(byte); // Size for unmanaged type Result
        size += sizeof(uint); // Size for unmanaged type UserID
        size += StringEx.MeasureSize(obj.Username); // Size for string Username
        return size;
    }

    public static LoginPacket Deserialize(System.ReadOnlySpan<byte> data, out int bytesRead)
    {
        bytesRead = 0;
        var originalData = data;
        var obj = new LoginPacket();
        obj.Result = data.ReadByte();
        obj.UserID = data.ReadUInt32();
        obj.Username = data.ReadString();
        bytesRead = originalData.Length - data.Length;
        return obj;
    }

    public static int Serialize(LoginPacket obj, System.Span<byte> data)
    {
        var originalData = data;
        data.WriteByte((Byte)obj.Result);
        data.WriteUInt32((UInt32)obj.UserID);
        data.WriteString(obj.Username);
        return originalData.Length - data.Length;
    }
}

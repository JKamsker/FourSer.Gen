// <auto-generated/>
using System;
using System.Buffers.Binary;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using FourSer.Contracts;
using System.IO;
using FourSer.Gen.Helpers;

namespace FourSer.Tests.GeneratorTestCases.Collection;

public partial class CollectionPacket : ISerializable<CollectionPacket>
{
    public static int GetPacketSize(CollectionPacket obj)
    {
        var size = 0;
        size += sizeof(int); // Count size for Numbers
        size += obj.Numbers.Count * sizeof(int);
        return size;
    }

    public static CollectionPacket Deserialize(System.ReadOnlySpan<byte> data, out int bytesRead)
    {
        bytesRead = 0;
        var originalData = data;
        var obj = new CollectionPacket();
        var numbersCount = FourSer.Gen.Helpers.RoSpanReaderHelpers.ReadInt32(ref data);
        obj.Numbers = new System.Collections.Generic.List<int>((int)numbersCount);
        for (int i = 0; i < (int)numbersCount; i++)
        {
            obj.Numbers.Add(FourSer.Gen.Helpers.RoSpanReaderHelpers.ReadInt32(ref data));
        }
        return obj;
        bytesRead = originalData.Length - data.Length;
    }

    public static int Serialize(CollectionPacket obj, System.Span<byte> data)
    {
        var originalData = data;
        FourSer.Gen.Helpers.SpanWriterHelpers.WriteInt32(ref data, (int)obj.Numbers.Count);
        for (int i = 0; i < obj.Numbers.Count; i++)
        {
            FourSer.Gen.Helpers.SpanWriterHelpers.WriteInt32(ref data, (Int32)obj.Numbers[i]);
        }
        return originalData.Length - data.Length;
    }
}

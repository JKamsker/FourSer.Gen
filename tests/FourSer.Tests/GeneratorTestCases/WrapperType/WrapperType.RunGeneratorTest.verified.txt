// <auto-generated/>
using System;
using System.Buffers.Binary;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using FourSer.Contracts;
using System.IO;
using FourSer.Gen.Helpers;
using SpanReader = FourSer.Gen.Helpers.RoSpanReaderHelpers;
using StreamReader = FourSer.Gen.Helpers.StreamReaderHelpers;
using SpanWriter = FourSer.Gen.Helpers.SpanWriterHelpers;
using StreamWriter = FourSer.Gen.Helpers.StreamWriterHelpers;

namespace FourSer.Tests.GeneratorTestCases.WrapperType;

public partial class WrapperUserClass : ISerializable<WrapperUserClass>
{
    public static int GetPacketSize(WrapperUserClass obj)
    {
        if (obj is null) return 0;
        var size = 0;
        size += FourSerString.GetPacketSize(obj.Name); // Size for nested type Name
        return size;
    }

    private WrapperUserClass(FourSer.Tests.GeneratorTestCases.WrapperType.FourSerString name)
    {
        this.Name = name;
    }

    public WrapperUserClass()
    {
        this.Name = default;
    }

    public static WrapperUserClass Deserialize(ref System.ReadOnlySpan<byte> buffer)
    {
        var name = FourSerString.Deserialize(ref buffer);
        var obj = new WrapperUserClass(name);
        return obj;
    }

    public static WrapperUserClass Deserialize(System.ReadOnlySpan<byte> buffer)
    {
        return Deserialize(ref buffer);
    }

    public static WrapperUserClass Deserialize(System.IO.Stream stream)
    {
        var name = FourSerString.Deserialize(stream);
        var obj = new WrapperUserClass(name);
        return obj;
    }

    public static void Serialize(WrapperUserClass obj, ref System.Span<byte> data)
    {
        if (obj is null) return;
        if (obj.Name is null)
        {
            throw new System.NullReferenceException($"Member \"obj.Name\" cannot be null.");
        }
        FourSer.Tests.GeneratorTestCases.WrapperType.FourSerString.Serialize(obj.Name, ref data);
    }

    public static void Serialize(WrapperUserClass obj, System.Span<byte> data)
    {
        Serialize(obj, ref data);
    }

    public static void Serialize(WrapperUserClass obj, System.IO.Stream stream)
    {
        if (obj is null) return;
        if (obj.Name is null)
        {
            throw new System.NullReferenceException($"Member \"obj.Name\" cannot be null.");
        }
        FourSer.Tests.GeneratorTestCases.WrapperType.FourSerString.Serialize(obj.Name, stream);
    }
}
